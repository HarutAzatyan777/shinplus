import React, { useState } from 'react'
import '../../styles/ConcreteCalculator.css'
import { useNavigate } from 'react-router-dom'

const ConcreteCalculator = () => {
  const [length, setLength] = useState('')
  const [width, setWidth] = useState('')
  const [height, setHeight] = useState('')
  const [volume, setVolume] = useState(null)
  const navigate = useNavigate()

  const calculateVolume = () => {
    const l = parseFloat(length)
    const w = parseFloat(width)
    const h = parseFloat(height)

    if (!isNaN(l) && !isNaN(w) && !isNaN(h)) {
      const result = (l * w * h).toFixed(2)
      setVolume(result)
    } else {
      setVolume(null)
    }
  }

  return (
    <div className="concrete-calculator">
      <div className="breadcrumb">
        <span onClick={() => navigate('/')}>üè† ‘≥’¨’≠’°’æ’∏÷Ä</span>
        <span className="breadcrumb-separator">‚Ä∫</span>
        <span onClick={() => navigate('/calculators')}>’á’´’∂’°÷Ä’°÷Ä’°’Ø’°’∂ ’∞’°’∑’æ’´’π’∂’•÷Ä</span>
        <span className="breadcrumb-separator">‚Ä∫</span>
        <span className="current">‘≤’•’ø’∏’∂’´ ’Æ’°’æ’°’¨’´ ’∞’°’∑’æ’´’π</span>
      </div>

      <h2>‘≤’•’ø’∏’∂’´ ’Æ’°’æ’°’¨’´ ’∞’°’∑’æ’´’π</h2>
      <p>’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’π’°÷É’Ω’•÷Ä’® ’¥’•’ø÷Ä’•÷Ä’∏’æ:</p>

      <div className="input-group">
        <label>‘µ÷Ä’Ø’°÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ (’¥)</label>
        <input type="number" value={length} onChange={e => setLength(e.target.value)} />
      </div>

      <div className="input-group">
        <label>‘º’°’µ’∂’∏÷Ç’©’µ’∏÷Ç’∂ (’¥)</label>
        <input type="number" value={width} onChange={e => setWidth(e.target.value)} />
      </div>

      <div className="input-group">
        <label>‘≤’°÷Ä’±÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ (’¥)</label>
        <input type="number" value={height} onChange={e => setHeight(e.target.value)} />
      </div>

      <button className="calculate-btn" onClick={calculateVolume}>’Ä’°’∑’æ’•’¨</button>


      {volume && (
        <div className="result">
          <p>‘±’∂’∞÷Ä’°’™’•’∑’ø ’¢’•’ø’∏’∂’´ ’Æ’°’æ’°’¨’®’ù <strong>{volume} ’¥¬≥</strong></p>
        </div>
      )}
    </div>
  )
}

export default ConcreteCalculator
