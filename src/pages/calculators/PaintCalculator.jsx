import React, { useState } from 'react';
import { useSelector } from 'react-redux';
import paintCalculatorApi from '../../api/paintCalculator';
import '../../styles/PaintCalculator.css';

const PaintCalculator = () => {
  const { user } = useSelector((state) => state.auth); // ’Ω’ø’°’∂’∏÷Ç’¥ ’•’∂÷Ñ ÷Ö’£’ø’°’ø’´÷Ä’∏’ª ID-’∂

  console.log('üëâ user from Redux:', user); // ‚úÖ ‘±’µ’Ω’ø’•’≤ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ user-’®

  const [roomData, setRoomData] = useState({
    length: '',
    width: '',
    height: '',
    coveragePerLiter: 12, // default ’°÷Ä’™’•÷Ñ, ’Ø’°÷Ä’∏’≤ ’ß ÷É’∏÷É’∏’≠’æ’•’¨
  });

  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);

  const handleChange = (e) => {
    setRoomData({ ...roomData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError(null);

    console.log('üì¶ Submitted room data:', roomData);

    if (!user?.uid) {
      console.warn('‚ö†Ô∏è User not logged in or uid missing');
      setError('’Ñ’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Ñ’ù ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨’∏÷Ç ’∞’°’¥’°÷Ä÷â');
      return;
    }

    const payload = {
      ...roomData,
      length: parseFloat(roomData.length),
      width: parseFloat(roomData.width),
      height: parseFloat(roomData.height),
      coveragePerLiter: parseFloat(roomData.coveragePerLiter),
      user: user.uid,
    };

    console.log('üì§ Payload to API:', payload);

    try {
      const res = await paintCalculatorApi.post('/', payload);
      console.log('‚úÖ Response from API:', res.data);
      setResult(res.data); // ’•’∂’©’°’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ’ù `{ paintLiters: number }`
    } catch (err) {
      console.error('‚ùå Error calculating paint:', err);
      setError('’â’∞’°’ª’∏’≤’æ’•÷Å ’∞’°’∑’æ’°÷Ä’Ø’•’¨ ’∂’•÷Ä’Ø’´ ÷Ñ’°’∂’°’Ø’®÷â');
    }
  };

  return (
    <div className="paint-calculator">
      <h2>’Ü’•÷Ä’Ø’´ ’Ä’°’∑’æ’´’π</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>‘µ÷Ä’Ø’°÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ (’¥):</label>
          <input
            type="number"
            name="length"
            value={roomData.length}
            onChange={handleChange}
            required
            step="0.1"
          />
        </div>
        <div>
          <label>‘º’°’µ’∂’∏÷Ç’©’µ’∏÷Ç’∂ (’¥):</label>
          <input
            type="number"
            name="width"
            value={roomData.width}
            onChange={handleChange}
            required
            step="0.1"
          />
        </div>
        <div>
          <label>‘≤’°÷Ä’±÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ (’¥):</label>
          <input
            type="number"
            name="height"
            value={roomData.height}
            onChange={handleChange}
            required
            step="0.1"
          />
        </div>
        <div>
          <label>‘æ’°’Æ’Ø’∏÷Ç’µ’© (’¥¬≤/’¨’´’ø÷Ä):</label>
          <input
            type="number"
            name="coveragePerLiter"
            value={roomData.coveragePerLiter}
            onChange={handleChange}
            required
            step="0.1"
          />
        </div>
        <button type="submit">’Ä’°’∑’æ’•’¨</button>
      </form>

      {result && (
  <div className="result">
    <h3>‘±÷Ä’§’µ’∏÷Ç’∂÷Ñ</h3>
    <p>’ç’•’∂’µ’°’Ø’´ ’¥’°’Ø’•÷Ä’•’Ω’®’ù {result.area} ’¥¬≤</p>
    <p>’ä’°’∞’°’∂’ª’æ’∏’≤ ’∂’•÷Ä’Ø’ù {result.litersNeeded} ’¨’´’ø÷Ä</p>
    <p>’Ü’°’≠’°’ø’•’Ω’æ’∏’≤ ’°’∑’≠’°’ø’°’∂÷Ñ’°’µ’´’∂ ’™’°’¥’•÷Ä’ù {result.estimatedHours} ’™’°’¥</p>
  </div>
)}

      {error && <p className="error"> >{error}</p>}
    </div>
  );
};

export default PaintCalculator;
